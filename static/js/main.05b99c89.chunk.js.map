{"version":3,"sources":["StudentList/StudentList.module.css","StudentDetails/StudentDetails.module.css","StudentList/StudentList.js","StudentDetails/StudentDetails.js","CrudModale/CrudModale.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","studentslist","props","style","margin","border","width","marginBottom","padding","display","flexDirection","className","styles","container","students","map","s","console","log","id","row","listItem","selected","onClick","click","name","StudentDetails","selectedStudent","StudentDetail","details","age","grade","deletebtn","delete","newUpdateHandler","editBtn","changeStatusHandler","status","CrudModale","addNewStudent","document","getElementById","value","newperson","for","required","onChange","student","App","state","data","selectedStudentId","setState","length","push","deletedStudentIndex","findIndex","splice","OldstudentsIndex","this","index","studentSelectedhandler","person","find","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,SAAW,8BAA8B,IAAM,yBAAyB,QAAU,+B,gBCA7ID,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,QAAU,kC,meCkC/FC,EAhCM,SAACC,GAElB,IAAMC,EAAQ,CACVC,OAAQ,OACRC,OAAQ,kBACRC,MAAO,QACPC,aAAc,OACdC,QAAS,MACTC,QAAS,OACTC,cAAe,OAGnB,OACI,qBAAKC,UAAWC,IAAOC,UAAvB,SAEQX,EAAMY,SAASC,KAAI,SAACC,GAEhB,OADAC,QAAQC,IAAIF,EAAEG,IAEV,qBAAKR,UAAWC,IAAOQ,IAAvB,SACI,mBACIT,UAAWC,IAAOS,SAAW,KAAOnB,EAAMoB,WAAaN,EAAEG,GAAKP,IAAOU,SAAW,IAChFnB,MAAOA,EAAOoB,QAAS,kBAAMrB,EAAMsB,MAAMR,EAAEG,KAF/C,SAGgBH,EAAES,MAATT,EAAEG,Y,gBCoBxBO,EAzCQ,SAACxB,GAEpB,IAOIyB,EAAkBzB,EAAMyB,gBACxBC,EAAgB,WAChB,OAAID,EAEI,sBAAKhB,UAAWC,IAAOiB,QAAvB,UACI,uCAAUF,EAAgBF,KAA1B,OACA,sCAASE,EAAgBG,IAAzB,OACA,wCAAWH,EAAgBI,MAA3B,aACA,wBAAQpB,UAAWC,IAAOoB,UAAY,IAAMpB,IAAOqB,OAC/CV,QAAS,kBAAMrB,EAAMgC,iBAAiB,EAAGP,IAD7C,oBAGA,wBACIhB,UAAWC,IAAOuB,QAClBZ,QAAS,kBAAMrB,EAAMkC,oBAAoB,IAF7C,qBAOL,MAEX,OAEsB,IAAlBlC,EAAMmC,OACF,qBAAK1B,UAAU,iBAAf,SACI,cAACiB,EAAD,MACK,MCcNU,EApDI,SAACpC,GAEhB,IAAIqC,EAAgB,WAChB,IAAId,EAAOe,SAASC,eAAe,QAAQC,MACvCZ,EAAMU,SAASC,eAAe,OAAOC,MACrCX,EAAQS,SAASC,eAAe,SAASC,MAC7CzB,QAAQC,IAAIO,EAAMK,EAAKC,GACvB,IAAIY,EAAY,CACZlB,OACAK,MACAC,SAGJ7B,EAAMgC,iBAAiBhC,EAAMmC,OAAQM,IAGzC,OAAsB,IAAlBzC,EAAMmC,OAiCC,KAhCc,IAAjBnC,EAAMmC,OAEF,sBAAK1B,UAAU,aAAf,UACI,uBAAOiC,IAAI,OAAX,kBACA,uBAAOzB,GAAG,OAAOM,KAAK,OAAOoB,UAAQ,IACrC,uBAAOD,IAAI,MAAX,iBACA,uBAAOzB,GAAG,MAAMM,KAAK,MAAMoB,UAAQ,IACnC,uBAAOD,IAAI,QAAX,mBACA,uBAAOzB,GAAG,QAAQM,KAAK,QAAQoB,UAAQ,IACvC,wBAAQlC,UAAU,MAAMY,QAASgB,EAAjC,oBAKS,IAAjBrC,EAAMmC,OAEF,sBAAK1B,UAAU,aAAf,UACI,uBAAOiC,IAAI,OAAX,kBACA,uBAAOzB,GAAG,OAAOM,KAAK,OAAOqB,SAAUP,EAAeG,MAAOxC,EAAM6C,QAAQtB,KAAMoB,UAAQ,IACzF,uBAAOD,IAAI,MAAX,iBACA,uBAAOzB,GAAG,MAAMM,KAAK,MAAMqB,SAAUP,EAAeG,MAAOxC,EAAM6C,QAAQjB,IAAKe,UAAQ,IACtF,uBAAOD,IAAI,QAAX,mBACA,uBAAOzB,GAAG,QAAQM,KAAK,SAASqB,SAAUP,EAAeG,MAAOxC,EAAM6C,QAAQhB,MAAOc,UAAQ,IAC7F,wBAAQlC,UAAU,MAAMY,QAAS,WAC7BgB,IACArC,EAAMkC,qBAAqB,IAF/B,0BATZ,GCpBFY,E,4MAEJC,MAAQ,CACNnC,SAAUoC,EAAKpC,SACfqC,kBAAmB,KACnBd,QAAS,G,4CAQX,WAAU,IAAD,OAQDD,EAAsB,SAACC,GAC3B,EAAKe,SAAS,CAAEf,YAGZH,EAAmB,SAACG,EAAQU,GAEhC,GADA9B,QAAQC,IAAI,0CAA2CmB,EAAQU,GAChD,IAAXV,EAAc,CAChB,IAAKU,EAAQ5B,GAAI,CACf,IAAIA,EAAK,EAAK8B,MAAMnC,SAASuC,OAAS,EACtCN,EAAQ5B,GAAKA,EAEf,IAAIL,EAAQ,YAAO,EAAKmC,MAAMnC,UAC9BA,EAASwC,KAAKP,GACd,EAAKK,SACH,CAAEtC,WAAUuB,QAAS,IAIzB,GAAe,IAAXA,EAAc,CAChB,IAAIvB,EAAQ,YAAO,EAAKmC,MAAMnC,UAC1ByC,EAAsB,EAAKN,MAAMnC,SAAS0C,WAAU,SAACxC,GAAD,OAAOA,EAAEG,KAAO4B,EAAQ5B,MAChFL,EAAS2C,OAAOF,EAAqB,GACrC,EAAKH,SACH,CAAEtC,WAAUuB,QAAS,IAGzB,GAAe,IAAXA,EAAc,CAChB,IAAIvB,EAAQ,YAAO,EAAKmC,MAAMnC,UAC9BiC,EAAQ5B,GAAK,EAAK8B,MAAME,kBACxB,IAAIO,EAAmB,EAAKT,MAAMnC,SAAS0C,WAAU,SAACxC,GAAD,OAAOA,EAAEG,KAAO4B,EAAQ5B,MAC7EF,QAAQC,IAAI,eAAiB6B,EAAQ5B,IACrCL,EAAS2C,OAAOC,EAAkB,EAAGX,GACrC,EAAKK,SAAS,CAAEtC,aAChBG,QAAQC,IAAI,EAAK+B,MAAMnC,YAQ3B,OACE,sBAAKH,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,SAAUqC,KAAKV,MAAME,kBACrBrC,SAAU6C,KAAKV,MAAMnC,SACrBU,MACE,SAACoC,IArDsB,SAACA,GAC9B,EAAKR,SAAS,CAAED,kBAAmBS,IACnC3C,QAAQC,IAAI,iBAAmB,EAAK+B,MAAME,mBAoDlCU,CAAuBD,GACvBxB,GAAqB,OAKF,IAAvBuB,KAAKV,MAAMZ,OACT,wBAAQ1B,UAAU,SAChBY,QAAS,kBAAMa,EAAoB,IADrC,eAGE,KAEN,cAAC,EAAD,CACEA,oBAAqBA,EACrBC,OAAQsB,KAAKV,MAAMZ,OACnBH,iBAAkB,SAAC0B,EAAOE,GAAR,OAAmB5B,EAAiB0B,EAAOE,IAC7Df,QAASY,KAAKV,MAAMnC,SAASiD,MAAK,SAAC/C,GAAD,OAAOA,EAAEG,KAAO,EAAK8B,MAAME,uBAC/D,cAAC,EAAD,CAAgBd,OAAQsB,KAAKV,MAAMZ,OACjCV,gBAAiBgC,KAAKV,MAAMnC,SACzBiD,MAAK,SAAC/C,GAAD,OAAOA,EAAEG,KAAO,EAAK8B,MAAME,qBACnCjB,iBAAkB,SAAC0B,EAAOE,GAAR,OAAmB5B,EAAiB0B,EAAOE,IAC7D1B,oBAAqBA,W,GA3Fb4B,aAmGHhB,IClGAiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.05b99c89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"StudentList_listItem__3lIQn\",\"selected\":\"StudentList_selected__1krDS\",\"row\":\"StudentList_row__r7std\",\"xButton\":\"StudentList_xButton__33caN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"StudentDetails_details__13pHH\",\"delete\":\"StudentDetails_delete__2COkS\",\"editBtn\":\"StudentDetails_editBtn__3kMgH\"};","import React from \"react\";\r\nimport styles from './StudentList.module.css'\r\n\r\nconst studentslist = (props) => {\r\n\r\n    const style = {\r\n        margin: 'auto',\r\n        border: '1px solid black',\r\n        width: '300px',\r\n        marginBottom: '15px',\r\n        padding: '5px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                props.students.map((s) => {\r\n                    console.log(s.id)\r\n                    return (\r\n                        <div className={styles.row}>\r\n                            <p\r\n                                className={styles.listItem + ' ' + (props.selected === s.id ? styles.selected : '')}\r\n                                style={style} onClick={() => props.click(s.id)}\r\n                                key={s.id}>{s.name}\r\n                            </p>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default studentslist","import React from \"react\";\r\nimport styles from './StudentDetails.module.css'\r\n\r\n\r\nconst StudentDetails = (props) => {\r\n\r\n    const style = {\r\n        margin: 'auto',\r\n        width: '300px',\r\n        backgroundColor: '#cecece',\r\n        padding: '15px',\r\n    }\r\n\r\n    let selectedStudent = props.selectedStudent\r\n    let StudentDetail = () => {\r\n        if (selectedStudent) {\r\n            return (\r\n                <div className={styles.details}>\r\n                    <p>Name: {selectedStudent.name} </p>\r\n                    <p>Age: {selectedStudent.age} </p>\r\n                    <p>Grade: {selectedStudent.grade} / 100 </p>\r\n                    <button className={styles.deletebtn + ' ' + styles.delete}\r\n                        onClick={() => props.newUpdateHandler(2, selectedStudent)}\r\n                    >Delete</button>\r\n                    <button\r\n                        className={styles.editBtn}\r\n                        onClick={() => props.changeStatusHandler(0)}\r\n                    >Edit</button>\r\n                </div >\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    return (\r\n\r\n        props.status === -1 ?\r\n            <div className='StudentDetails' >\r\n                <StudentDetail />\r\n            </div> : null\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default StudentDetails","const CrudModale = (props) => {\r\n\r\n    let addNewStudent = () => {\r\n        let name = document.getElementById('name').value\r\n        let age = document.getElementById('age').value\r\n        let grade = document.getElementById('grade').value\r\n        console.log(name, age, grade)\r\n        let newperson = {\r\n            name,\r\n            age,\r\n            grade,\r\n        }\r\n\r\n        props.newUpdateHandler(props.status, newperson)\r\n    }\r\n\r\n    if (props.status !== -1) {\r\n        if (props.status === 1) {\r\n            return (\r\n                <div className='newStudent'>\r\n                    <label for=\"name\">Name</label>\r\n                    <input id=\"name\" name='name' required></input>\r\n                    <label for=\"age\">Age</label>\r\n                    <input id=\"age\" name='age' required></input>\r\n                    <label for=\"grade\">Grade</label>\r\n                    <input id=\"grade\" name='grade' required></input>\r\n                    <button className='Add' onClick={addNewStudent}>ADD</button>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        if (props.status === 0) {\r\n            return (\r\n                <div className='newStudent'>\r\n                    <label for=\"name\">Name</label>\r\n                    <input id=\"name\" name='name' onChange={addNewStudent} value={props.student.name} required></input>\r\n                    <label for=\"age\">Age</label>\r\n                    <input id=\"age\" name='age' onChange={addNewStudent} value={props.student.age} required></input>\r\n                    <label for=\"grade\">Grade</label>\r\n                    <input id=\"grade\" name='grade ' onChange={addNewStudent} value={props.student.grade} required></input>\r\n                    <button className='Add' onClick={() => {\r\n                        addNewStudent()\r\n                        props.changeStatusHandler(-1)\r\n                    }}>Done</button>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    } else\r\n        return null\r\n}\r\n\r\nexport default CrudModale","import './App.css';\nimport data from './db.json'\nimport { Component } from 'react'\nimport Studentslist from './StudentList/StudentList';\nimport StudentDetails from './StudentDetails/StudentDetails'\nimport CrudModale from './CrudModale/CrudModale';\n\n//Make list its own component\n//Make list item clickable\n//ON click another component should show with details\n\nclass App extends Component {\n\n  state = {\n    students: data.students,\n    selectedStudentId: null,\n    status: -1\n  }\n  // -1 is for nothing is controlled\n  // 0 is for edit\n  // 1 is for new\n  // 2 is for delete\n\n\n  render() {\n\n    //functions\n    const studentSelectedhandler = (index) => {\n      this.setState({ selectedStudentId: index })\n      console.log(\"I was Xlicked:\" + this.state.selectedStudentId)\n    }\n\n    const changeStatusHandler = (status) => {\n      this.setState({ status })\n    }\n\n    const newUpdateHandler = (status, student) => {\n      console.log('update handler working with arguments: ', status, student)\n      if (status === 1) {\n        if (!student.id) {\n          let id = this.state.students.length + 1\n          student.id = id\n        }\n        let students = [...this.state.students]\n        students.push(student)\n        this.setState(\n          { students, status: -1 }\n\n        )\n      }\n      if (status === 2) {\n        let students = [...this.state.students]\n        let deletedStudentIndex = this.state.students.findIndex((s) => s.id === student.id)\n        students.splice(deletedStudentIndex, 1)\n        this.setState(\n          { students, status: -1 }\n        )\n      }\n      if (status === 0) {\n        let students = [...this.state.students]\n        student.id = this.state.selectedStudentId\n        let OldstudentsIndex = this.state.students.findIndex((s) => s.id === student.id)\n        console.log('editing id: ' + student.id);\n        students.splice(OldstudentsIndex, 1, student)\n        this.setState({ students })\n        console.log(this.state.students);\n      }\n    }\n\n    //components\n\n\n\n    return (\n      <div className=\"App\" >\n        <h1>My students List</h1>\n        <Studentslist\n          selected={this.state.selectedStudentId}\n          students={this.state.students}\n          click={\n            (index) => {\n              studentSelectedhandler(index)\n              changeStatusHandler(-1)\n            }\n          }\n        />\n        {\n          this.state.status === -1 ?\n            <button className='addbtn'\n              onClick={() => changeStatusHandler(1)}\n            >+</button>\n            : null\n        }\n        <CrudModale\n          changeStatusHandler={changeStatusHandler}\n          status={this.state.status}\n          newUpdateHandler={(index, person) => newUpdateHandler(index, person)}\n          student={this.state.students.find((s) => s.id === this.state.selectedStudentId)} />\n        <StudentDetails status={this.state.status}\n          selectedStudent={this.state.students\n            .find((s) => s.id === this.state.selectedStudentId)}\n          newUpdateHandler={(index, person) => newUpdateHandler(index, person)}\n          changeStatusHandler={changeStatusHandler} />\n      </div >\n\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}